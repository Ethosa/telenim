name: Tests

on:
  push:
  pull_request:

jobs:
  skip:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Skip job"

  before:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - run: echo "not contains '[skip ci]'"

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          #- macOS-latest
        nim_version:
          - '1.2.0'
          - 'stable'
    needs: before
    env:
      TIMEOUT_EXIT_STATUS: 124
    steps:
      - uses: actions/checkout@v1
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v1
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ hashFiles('*.nimble') }}
        if: runner.os == 'Linux'
      - uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ matrix.nim_version }}

      - name: Fix apt packages
        run: |
          # see. https://github.com/actions/virtual-environments/issues/675
          sudo sed -i 's/azure\.//' /etc/apt/sources.list
          sudo apt update -yqq
        if: runner.os == 'Linux'

      - name: Build tests on Ubuntu
        run: |
          cd tests
          for file in $(ls -v test*.nim); do
            echo "test: $file"
            nim c -d:ssl $file
            timeout 2 xvfb-run --auto-servernum --server-num=1 ./${file%%.nim} || [ $? -eq ${{ env.TIMEOUT_EXIT_STATUS }} ]
          done
        shell: bash
        if: runner.os == 'Linux'

      - name: Build tests on Windows
        run: |
          cp *.dll tests/
          cd tests
          for file in $(ls -v test*.nim); do
            echo "test: $file"
            nim c -d:ssl $file
            timeout 2 ./${file%%.nim} || [ $? -eq ${{ env.TIMEOUT_EXIT_STATUS }} ]
          done
        shell: bash
        if: runner.os == 'Windows'
